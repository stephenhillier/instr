// Code generated by protoc-gen-go. DO NOT EDIT.
// source: api.proto

package api

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"

import (
	context "golang.org/x/net/context"
	grpc "google.golang.org/grpc"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

type ResistanceResponse_Status int32

const (
	ResistanceResponse_FAILED ResistanceResponse_Status = 0
	ResistanceResponse_OK     ResistanceResponse_Status = 1
)

var ResistanceResponse_Status_name = map[int32]string{
	0: "FAILED",
	1: "OK",
}
var ResistanceResponse_Status_value = map[string]int32{
	"FAILED": 0,
	"OK":     1,
}

func (x ResistanceResponse_Status) String() string {
	return proto.EnumName(ResistanceResponse_Status_name, int32(x))
}
func (ResistanceResponse_Status) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_api_18425c15a5e9ecd4, []int{1, 0}
}

type ResistanceReading struct {
	Resistance           float64  `protobuf:"fixed64,1,opt,name=resistance,proto3" json:"resistance,omitempty"`
	Device               string   `protobuf:"bytes,2,opt,name=device,proto3" json:"device,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ResistanceReading) Reset()         { *m = ResistanceReading{} }
func (m *ResistanceReading) String() string { return proto.CompactTextString(m) }
func (*ResistanceReading) ProtoMessage()    {}
func (*ResistanceReading) Descriptor() ([]byte, []int) {
	return fileDescriptor_api_18425c15a5e9ecd4, []int{0}
}
func (m *ResistanceReading) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ResistanceReading.Unmarshal(m, b)
}
func (m *ResistanceReading) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ResistanceReading.Marshal(b, m, deterministic)
}
func (dst *ResistanceReading) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ResistanceReading.Merge(dst, src)
}
func (m *ResistanceReading) XXX_Size() int {
	return xxx_messageInfo_ResistanceReading.Size(m)
}
func (m *ResistanceReading) XXX_DiscardUnknown() {
	xxx_messageInfo_ResistanceReading.DiscardUnknown(m)
}

var xxx_messageInfo_ResistanceReading proto.InternalMessageInfo

func (m *ResistanceReading) GetResistance() float64 {
	if m != nil {
		return m.Resistance
	}
	return 0
}

func (m *ResistanceReading) GetDevice() string {
	if m != nil {
		return m.Device
	}
	return ""
}

type ResistanceResponse struct {
	Status               ResistanceResponse_Status `protobuf:"varint,1,opt,name=status,proto3,enum=api.ResistanceResponse_Status" json:"status,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                  `json:"-"`
	XXX_unrecognized     []byte                    `json:"-"`
	XXX_sizecache        int32                     `json:"-"`
}

func (m *ResistanceResponse) Reset()         { *m = ResistanceResponse{} }
func (m *ResistanceResponse) String() string { return proto.CompactTextString(m) }
func (*ResistanceResponse) ProtoMessage()    {}
func (*ResistanceResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_api_18425c15a5e9ecd4, []int{1}
}
func (m *ResistanceResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ResistanceResponse.Unmarshal(m, b)
}
func (m *ResistanceResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ResistanceResponse.Marshal(b, m, deterministic)
}
func (dst *ResistanceResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ResistanceResponse.Merge(dst, src)
}
func (m *ResistanceResponse) XXX_Size() int {
	return xxx_messageInfo_ResistanceResponse.Size(m)
}
func (m *ResistanceResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_ResistanceResponse.DiscardUnknown(m)
}

var xxx_messageInfo_ResistanceResponse proto.InternalMessageInfo

func (m *ResistanceResponse) GetStatus() ResistanceResponse_Status {
	if m != nil {
		return m.Status
	}
	return ResistanceResponse_FAILED
}

func init() {
	proto.RegisterType((*ResistanceReading)(nil), "api.ResistanceReading")
	proto.RegisterType((*ResistanceResponse)(nil), "api.ResistanceResponse")
	proto.RegisterEnum("api.ResistanceResponse_Status", ResistanceResponse_Status_name, ResistanceResponse_Status_value)
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// ResistanceClient is the client API for Resistance service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type ResistanceClient interface {
	ReadResistance(ctx context.Context, in *ResistanceReading, opts ...grpc.CallOption) (*ResistanceResponse, error)
}

type resistanceClient struct {
	cc *grpc.ClientConn
}

func NewResistanceClient(cc *grpc.ClientConn) ResistanceClient {
	return &resistanceClient{cc}
}

func (c *resistanceClient) ReadResistance(ctx context.Context, in *ResistanceReading, opts ...grpc.CallOption) (*ResistanceResponse, error) {
	out := new(ResistanceResponse)
	err := c.cc.Invoke(ctx, "/api.Resistance/ReadResistance", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// ResistanceServer is the server API for Resistance service.
type ResistanceServer interface {
	ReadResistance(context.Context, *ResistanceReading) (*ResistanceResponse, error)
}

func RegisterResistanceServer(s *grpc.Server, srv ResistanceServer) {
	s.RegisterService(&_Resistance_serviceDesc, srv)
}

func _Resistance_ReadResistance_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ResistanceReading)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ResistanceServer).ReadResistance(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/api.Resistance/ReadResistance",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ResistanceServer).ReadResistance(ctx, req.(*ResistanceReading))
	}
	return interceptor(ctx, in, info, handler)
}

var _Resistance_serviceDesc = grpc.ServiceDesc{
	ServiceName: "api.Resistance",
	HandlerType: (*ResistanceServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "ReadResistance",
			Handler:    _Resistance_ReadResistance_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "api.proto",
}

func init() { proto.RegisterFile("api.proto", fileDescriptor_api_18425c15a5e9ecd4) }

var fileDescriptor_api_18425c15a5e9ecd4 = []byte{
	// 191 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xe2, 0xe2, 0x4c, 0x2c, 0xc8, 0xd4,
	0x2b, 0x28, 0xca, 0x2f, 0xc9, 0x17, 0x62, 0x4e, 0x2c, 0xc8, 0x54, 0xf2, 0xe6, 0x12, 0x0c, 0x4a,
	0x2d, 0xce, 0x2c, 0x2e, 0x49, 0xcc, 0x4b, 0x4e, 0x0d, 0x4a, 0x4d, 0x4c, 0xc9, 0xcc, 0x4b, 0x17,
	0x92, 0xe3, 0xe2, 0x2a, 0x82, 0x0b, 0x4a, 0x30, 0x2a, 0x30, 0x6a, 0x30, 0x06, 0x21, 0x89, 0x08,
	0x89, 0x71, 0xb1, 0xa5, 0xa4, 0x96, 0x65, 0x26, 0xa7, 0x4a, 0x30, 0x29, 0x30, 0x6a, 0x70, 0x06,
	0x41, 0x79, 0x4a, 0x59, 0x5c, 0x42, 0xc8, 0x86, 0x15, 0x17, 0xe4, 0xe7, 0x15, 0xa7, 0x0a, 0x99,
	0x71, 0xb1, 0x15, 0x97, 0x24, 0x96, 0x94, 0x16, 0x83, 0x4d, 0xe2, 0x33, 0x92, 0xd3, 0x03, 0xb9,
	0x01, 0x53, 0xa1, 0x5e, 0x30, 0x58, 0x55, 0x10, 0x54, 0xb5, 0x92, 0x0c, 0x17, 0x1b, 0x44, 0x44,
	0x88, 0x8b, 0x8b, 0xcd, 0xcd, 0xd1, 0xd3, 0xc7, 0xd5, 0x45, 0x80, 0x41, 0x88, 0x8d, 0x8b, 0xc9,
	0xdf, 0x5b, 0x80, 0xd1, 0xc8, 0x9f, 0x8b, 0x0b, 0x61, 0x84, 0x90, 0x23, 0x17, 0x1f, 0xc8, 0xf1,
	0x48, 0x22, 0x62, 0x18, 0xb6, 0x80, 0xfd, 0x26, 0x25, 0x8e, 0xc3, 0xf6, 0x24, 0x36, 0x70, 0xa8,
	0x18, 0x03, 0x02, 0x00, 0x00, 0xff, 0xff, 0x7a, 0x85, 0x78, 0x34, 0x22, 0x01, 0x00, 0x00,
}
